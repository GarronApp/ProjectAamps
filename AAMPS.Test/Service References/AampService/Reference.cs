//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AAMPS.Test.AampService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AampService.IAampService")]
    public interface IAampService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllUnits", ReplyAction="http://tempuri.org/IAampService/GetAllUnitsResponse")]
        AAMPS.Clients.AampService.Unit[] GetAllUnits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllUnits", ReplyAction="http://tempuri.org/IAampService/GetAllUnitsResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllUnitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitById", ReplyAction="http://tempuri.org/IAampService/GetUnitByIdResponse")]
        AAMPS.Clients.AampService.Unit GetUnitById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitById", ReplyAction="http://tempuri.org/IAampService/GetUnitByIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllAvailableUnits", ReplyAction="http://tempuri.org/IAampService/GetAllAvailableUnitsResponse")]
        AAMPS.Clients.AampService.Unit[] GetAllAvailableUnits(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllAvailableUnits", ReplyAction="http://tempuri.org/IAampService/GetAllAvailableUnitsResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllAvailableUnitsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllUnAvailableUnits", ReplyAction="http://tempuri.org/IAampService/GetAllUnAvailableUnitsResponse")]
        AAMPS.Clients.AampService.Unit[] GetAllUnAvailableUnits(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllUnAvailableUnits", ReplyAction="http://tempuri.org/IAampService/GetAllUnAvailableUnitsResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllUnAvailableUnitsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByUnitBlock", ReplyAction="http://tempuri.org/IAampService/GetUnitByUnitBlockResponse")]
        AAMPS.Clients.AampService.Unit GetUnitByUnitBlock(string block);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByUnitBlock", ReplyAction="http://tempuri.org/IAampService/GetUnitByUnitBlockResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByUnitBlockAsync(string block);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByAddedUser", ReplyAction="http://tempuri.org/IAampService/GetUnitByAddedUserResponse")]
        AAMPS.Clients.AampService.Unit GetUnitByAddedUser(int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByAddedUser", ReplyAction="http://tempuri.org/IAampService/GetUnitByAddedUserResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByAddedUserAsync(int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByAgentId", ReplyAction="http://tempuri.org/IAampService/GetUnitByAgentIdResponse")]
        AAMPS.Clients.AampService.Unit GetUnitByAgentId(int agent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByAgentId", ReplyAction="http://tempuri.org/IAampService/GetUnitByAgentIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByAgentIdAsync(int agent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByDevelopmentId", ReplyAction="http://tempuri.org/IAampService/GetUnitByDevelopmentIdResponse")]
        AAMPS.Clients.AampService.Unit[] GetUnitByDevelopmentId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitByDevelopmentId", ReplyAction="http://tempuri.org/IAampService/GetUnitByDevelopmentIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetUnitByDevelopmentIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/UpdateUnit", ReplyAction="http://tempuri.org/IAampService/UpdateUnitResponse")]
        void UpdateUnit(AAMPS.Clients.AampService.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/UpdateUnit", ReplyAction="http://tempuri.org/IAampService/UpdateUnitResponse")]
        System.Threading.Tasks.Task UpdateUnitAsync(AAMPS.Clients.AampService.Unit unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllSales", ReplyAction="http://tempuri.org/IAampService/GetAllSalesResponse")]
        AAMPS.Clients.AampService.Sale[] GetAllSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllSales", ReplyAction="http://tempuri.org/IAampService/GetAllSalesResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale[]> GetAllSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetSaleById", ReplyAction="http://tempuri.org/IAampService/GetSaleByIdResponse")]
        AAMPS.Clients.AampService.Sale GetSaleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetSaleById", ReplyAction="http://tempuri.org/IAampService/GetSaleByIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale> GetSaleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetSaleByUnitId", ReplyAction="http://tempuri.org/IAampService/GetSaleByUnitIdResponse")]
        AAMPS.Clients.AampService.Sale GetSaleByUnitId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetSaleByUnitId", ReplyAction="http://tempuri.org/IAampService/GetSaleByUnitIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale> GetSaleByUnitIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllDevelopments", ReplyAction="http://tempuri.org/IAampService/GetAllDevelopmentsResponse")]
        AAMPS.Clients.AampService.Development[] GetAllDevelopments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetAllDevelopments", ReplyAction="http://tempuri.org/IAampService/GetAllDevelopmentsResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Development[]> GetAllDevelopmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetDevelopmentById", ReplyAction="http://tempuri.org/IAampService/GetDevelopmentByIdResponse")]
        AAMPS.Clients.AampService.Development GetDevelopmentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetDevelopmentById", ReplyAction="http://tempuri.org/IAampService/GetDevelopmentByIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Development> GetDevelopmentByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetEstateByDevelopment", ReplyAction="http://tempuri.org/IAampService/GetEstateByDevelopmentResponse")]
        AAMPS.Clients.AampService.Estate GetEstateByDevelopment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetEstateByDevelopment", ReplyAction="http://tempuri.org/IAampService/GetEstateByDevelopmentResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Estate> GetEstateByDevelopmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitStatusById", ReplyAction="http://tempuri.org/IAampService/GetUnitStatusByIdResponse")]
        AAMPS.Clients.AampService.UnitStatus GetUnitStatusById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUnitStatusById", ReplyAction="http://tempuri.org/IAampService/GetUnitStatusByIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.UnitStatus> GetUnitStatusByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCompanies", ReplyAction="http://tempuri.org/IAampService/GetCompaniesResponse")]
        AAMPS.Clients.AampService.Company[] GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCompanies", ReplyAction="http://tempuri.org/IAampService/GetCompaniesResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Company[]> GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCompanyByUserGroupId", ReplyAction="http://tempuri.org/IAampService/GetCompanyByUserGroupIdResponse")]
        AAMPS.Clients.AampService.Company GetCompanyByUserGroupId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCompanyByUserGroupId", ReplyAction="http://tempuri.org/IAampService/GetCompanyByUserGroupIdResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.Company> GetCompanyByUserGroupIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/SavePerson", ReplyAction="http://tempuri.org/IAampService/SavePersonResponse")]
        void SavePerson(AAMPS.Clients.AampService.Individual person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/SavePerson", ReplyAction="http://tempuri.org/IAampService/SavePersonResponse")]
        System.Threading.Tasks.Task SavePersonAsync(AAMPS.Clients.AampService.Individual person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUser", ReplyAction="http://tempuri.org/IAampService/GetUserResponse")]
        AAMPS.Clients.AampService.UserList GetUser(int identity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetUser", ReplyAction="http://tempuri.org/IAampService/GetUserResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.UserList> GetUserAsync(int identity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCurrentUser", ReplyAction="http://tempuri.org/IAampService/GetCurrentUserResponse")]
        AAMPS.Clients.AampService.UserList GetCurrentUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAampService/GetCurrentUser", ReplyAction="http://tempuri.org/IAampService/GetCurrentUserResponse")]
        System.Threading.Tasks.Task<AAMPS.Clients.AampService.UserList> GetCurrentUserAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAampServiceChannel : AAMPS.Test.AampService.IAampService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AampServiceClient : System.ServiceModel.ClientBase<AAMPS.Test.AampService.IAampService>, AAMPS.Test.AampService.IAampService {
        
        public AampServiceClient() {
        }
        
        public AampServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AampServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AampServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AampServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AAMPS.Clients.AampService.Unit[] GetAllUnits() {
            return base.Channel.GetAllUnits();
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllUnitsAsync() {
            return base.Channel.GetAllUnitsAsync();
        }
        
        public AAMPS.Clients.AampService.Unit GetUnitById(int id) {
            return base.Channel.GetUnitById(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByIdAsync(int id) {
            return base.Channel.GetUnitByIdAsync(id);
        }
        
        public AAMPS.Clients.AampService.Unit[] GetAllAvailableUnits(int id) {
            return base.Channel.GetAllAvailableUnits(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllAvailableUnitsAsync(int id) {
            return base.Channel.GetAllAvailableUnitsAsync(id);
        }
        
        public AAMPS.Clients.AampService.Unit[] GetAllUnAvailableUnits(int id) {
            return base.Channel.GetAllUnAvailableUnits(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetAllUnAvailableUnitsAsync(int id) {
            return base.Channel.GetAllUnAvailableUnitsAsync(id);
        }
        
        public AAMPS.Clients.AampService.Unit GetUnitByUnitBlock(string block) {
            return base.Channel.GetUnitByUnitBlock(block);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByUnitBlockAsync(string block) {
            return base.Channel.GetUnitByUnitBlockAsync(block);
        }
        
        public AAMPS.Clients.AampService.Unit GetUnitByAddedUser(int user) {
            return base.Channel.GetUnitByAddedUser(user);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByAddedUserAsync(int user) {
            return base.Channel.GetUnitByAddedUserAsync(user);
        }
        
        public AAMPS.Clients.AampService.Unit GetUnitByAgentId(int agent) {
            return base.Channel.GetUnitByAgentId(agent);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit> GetUnitByAgentIdAsync(int agent) {
            return base.Channel.GetUnitByAgentIdAsync(agent);
        }
        
        public AAMPS.Clients.AampService.Unit[] GetUnitByDevelopmentId(int id) {
            return base.Channel.GetUnitByDevelopmentId(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Unit[]> GetUnitByDevelopmentIdAsync(int id) {
            return base.Channel.GetUnitByDevelopmentIdAsync(id);
        }
        
        public void UpdateUnit(AAMPS.Clients.AampService.Unit unit) {
            base.Channel.UpdateUnit(unit);
        }
        
        public System.Threading.Tasks.Task UpdateUnitAsync(AAMPS.Clients.AampService.Unit unit) {
            return base.Channel.UpdateUnitAsync(unit);
        }
        
        public AAMPS.Clients.AampService.Sale[] GetAllSales() {
            return base.Channel.GetAllSales();
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale[]> GetAllSalesAsync() {
            return base.Channel.GetAllSalesAsync();
        }
        
        public AAMPS.Clients.AampService.Sale GetSaleById(int id) {
            return base.Channel.GetSaleById(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale> GetSaleByIdAsync(int id) {
            return base.Channel.GetSaleByIdAsync(id);
        }
        
        public AAMPS.Clients.AampService.Sale GetSaleByUnitId(int id) {
            return base.Channel.GetSaleByUnitId(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Sale> GetSaleByUnitIdAsync(int id) {
            return base.Channel.GetSaleByUnitIdAsync(id);
        }
        
        public AAMPS.Clients.AampService.Development[] GetAllDevelopments() {
            return base.Channel.GetAllDevelopments();
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Development[]> GetAllDevelopmentsAsync() {
            return base.Channel.GetAllDevelopmentsAsync();
        }
        
        public AAMPS.Clients.AampService.Development GetDevelopmentById(int id) {
            return base.Channel.GetDevelopmentById(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Development> GetDevelopmentByIdAsync(int id) {
            return base.Channel.GetDevelopmentByIdAsync(id);
        }
        
        public AAMPS.Clients.AampService.Estate GetEstateByDevelopment(int id) {
            return base.Channel.GetEstateByDevelopment(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Estate> GetEstateByDevelopmentAsync(int id) {
            return base.Channel.GetEstateByDevelopmentAsync(id);
        }
        
        public AAMPS.Clients.AampService.UnitStatus GetUnitStatusById(int id) {
            return base.Channel.GetUnitStatusById(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.UnitStatus> GetUnitStatusByIdAsync(int id) {
            return base.Channel.GetUnitStatusByIdAsync(id);
        }
        
        public AAMPS.Clients.AampService.Company[] GetCompanies() {
            return base.Channel.GetCompanies();
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Company[]> GetCompaniesAsync() {
            return base.Channel.GetCompaniesAsync();
        }
        
        public AAMPS.Clients.AampService.Company GetCompanyByUserGroupId(int id) {
            return base.Channel.GetCompanyByUserGroupId(id);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.Company> GetCompanyByUserGroupIdAsync(int id) {
            return base.Channel.GetCompanyByUserGroupIdAsync(id);
        }
        
        public void SavePerson(AAMPS.Clients.AampService.Individual person) {
            base.Channel.SavePerson(person);
        }
        
        public System.Threading.Tasks.Task SavePersonAsync(AAMPS.Clients.AampService.Individual person) {
            return base.Channel.SavePersonAsync(person);
        }
        
        public AAMPS.Clients.AampService.UserList GetUser(int identity) {
            return base.Channel.GetUser(identity);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.UserList> GetUserAsync(int identity) {
            return base.Channel.GetUserAsync(identity);
        }
        
        public AAMPS.Clients.AampService.UserList GetCurrentUser(string username) {
            return base.Channel.GetCurrentUser(username);
        }
        
        public System.Threading.Tasks.Task<AAMPS.Clients.AampService.UserList> GetCurrentUserAsync(string username) {
            return base.Channel.GetCurrentUserAsync(username);
        }
    }
}
